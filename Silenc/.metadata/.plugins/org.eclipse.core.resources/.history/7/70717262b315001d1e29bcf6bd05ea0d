package com.GupiGames.Entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.GupiGames.FSM.PlayerState;
import com.GupiGames.FSM.Player_Feedback;
import com.GupiGames.FSM.Player_Idle;
import com.GupiGames.Graphics.PlayerAni;
import com.GupiGames.World.World;
import com.GupiGames.main.Game;


public class Entity extends Rectangle{

	public static String side = "Right";
	public String State;
	
	
	protected BufferedImage sprite;
	protected int Width, Height;
	protected int x, y , z;
	
	protected int maskWidth, maskHeight;
	protected int maskX, maskY;
	
	public int soul = 1;
	
	public int frame = 0, maxFrame = 10, curAnimation = 0;
	private boolean start;
	private int tick;
	private int Stage = 0;
	
	public Entity(BufferedImage sprite, int x, int y, int Width, int Height) {
		
		this.Width = Width; this.Height = Height;
		this.x = x; this.y = y;
		this.sprite = sprite;
		
	}

	public double getWidth() {
		return Width;
	}
	public double getHeight() {
		return Height;
	}
	
	public double getX() { 
		return x;
	}
	public double getY() {
		return y;
	}
	public int getZ() {
		return z;
	}
	
	public int getMaskWidth() {
		return maskWidth;
	}
	public int getMaskHeight() {
		return maskHeight;
	}
	
	public int getMaskX() { 
		return maskX;
	}
	public int getMaskY() {
		return maskY;
	}

	public void setWidth(int newWidth) {
		Width = newWidth;
	}
	public void setHeight(int newHeight) {
		Height = newHeight;
	}
	
	public void setX(int newX) { 
		x = newX;
	}
	public void setY(int newY) { 
		y = newY;
	}
	public void setZ(int newZ) { 
		z = newZ;
	}
	
	public void setMaskWidth(int newMaskWidth) {
		maskWidth = newMaskWidth;
	}
	public void setMaskHeight(int newMaskHeight) {
		maskHeight = newMaskHeight;
	}
	
	public void setMaskX(int newMaskX) {
		maskX = newMaskX;
	}
	public void setMaskY(int newMaskY) {
		maskY = newMaskY;
	}
	
	public void getSoul() {
		System.out.println("perdeu uma alma");
		soul--;
		if(this instanceof Player) {
			PlayerState.setState(new Player_Feedback());
			Game.player.currentAni = PlayerAni.dead;
			if(start) {
				tick++;
				if(Stage  == 3 && tick >= 29 && tick != 30) {
					Game.entities.add(new Tree(Game.playerSheet.getSprite(0, 0, 16, 16), (int) (Game.player.getX()),  (int) (Game.player.getY()), 16, 16, "visible"));
					Game.entities.add(new body(PlayerAni.dead[3], (int) (Game.player.getX()),  (int) (Game.player.getY()), 16, 16));
					Game.player.setX(World.spawnX);
					Game.player.setY(World.spawnY);
					PlayerState.setState(new Player_Idle());
					start = false;
				}
				if(tick >= 30) { 
					Stage++;
					Game.player.curAnimation++;
					tick = 0;
				}
			}
		}
		}
	}
	 
	public void update() {
		
	}
	
	public void render(Graphics g) {
		g.drawImage(sprite, x, y, null);
	}
	
}
