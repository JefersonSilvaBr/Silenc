package com.GupiGames.Entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.GupiGames.main.Game;

public class Tree extends Entity{
	
	 public String State = "visible";
	 public int Stage = 0;
	 public int tick = 0;
	 
	 public static BufferedImage treeTop = Game.entitiesSheet.getSprite(0, 0, 16, 16);
	 public static BufferedImage treeMid = Game.entitiesSheet.getSprite(0, 16, 16, 16);

	public Tree(BufferedImage sprite, int x, int y, int Width, int Height, String Stat) {
		super(sprite, x, y, Width, Height);
		maskX = 4;
		maskWidth = 8; maskHeight = 8;
		this.State = Stat;
	}
	
	public void growing() {
		
		tick++;
		if(Stage == 1) {
			Game.entities.add(new Tree(Game.playerSheet.getSprite(0, 0, 16, 16), x, y+16, 16, 16, "visible"));
			
		}
		if(tick >= 30) {
			Stage++;
			curAnimation++;
		}
		
	}
	
	public void decrementing() {	
	}
	
	public static boolean isClimb() {
		
		Rectangle playerCollider = new Rectangle(
				(int)(Game.player.getX() + Game.player.getMaskX()),
				(int)(Game.player.getY() + Game.player.getMaskY()),
				(int)Game.player.getMaskWidth(),
				(int)Game.player.getMaskHeight());
			
		for(int index = 0; index < Game.entities.size(); index++) {
				
			if(Game.entities.get(index) instanceof Tree && Game.entities.get(index).State == "visible") {
				
				Rectangle entityCollider = new Rectangle(
						(int)(Game.entities.get(index).getX() + Game.entities.get(index).getMaskX()),
						(int)(Game.entities.get(index).getY() + Game.entities.get(index).getMaskY()),
						(int)Game.entities.get(index).getMaskWidth(),
						(int)Game.entities.get(index).getMaskHeight());
					
				if(playerCollider.intersects(entityCollider)) {
					return true;	
				}
			}		
		}
		return false;
	}
	
	
	public void render(Graphics g) {
		
		if(State == "visible") {
			if(Stage == 0) {
				g.drawImage(treeTop, x, y, null);
			}
			else if(Stage == 1) {
				g.drawImage(treeMid, x, y, null);
			}
		}
		
	}

}
