package com.GupiGames.Entities;

import java.awt.Graphics;
import java.awt.image.BufferedImage;

import com.GupiGames.FSM.PlayerState;
import com.GupiGames.FSM.Player_Climb;
import com.GupiGames.FSM.Player_Idle;
import com.GupiGames.FSM.Player_Plant;
import com.GupiGames.Graphics.PlayerAni;
import com.GupiGames.World.World;
import com.GupiGames.main.Game;

public class Player extends Entity{

	public PlayerState playerState;
	
	public static boolean up, down, left, right, enter, plant;
	public static boolean jumpCooldown = true;
	public static boolean attackCooldown = true;
	public BufferedImage[] currentAni;
	
	public int jumpTick = 0;
	public int attackTick = 0;

	public boolean start = false;

	private int tick = 0;

	private int Stage = 0;
	
	public Player(BufferedImage sprite, int x, int y, int Width, int Height) {
		super(sprite, x, y, Width, Height);
		
		maskWidth = 8;  maskHeight = 15;
		maskX = 4 ; maskY = 1;
		
		playerState = new Player_Idle();
		currentAni = PlayerAni.idle_Right;
		side = "Right";
	}
	
	public void playerController() {
		if(!start) {
			playerState.feedback();
			playerState.plant();
			playerState.interact();
			playerState.climb();
			playerState.idle();
			playerState.walk();
			playerState.fall();
			playerState.jump();
			tick = 0;
		}
		else {
			playerState.fall();
			dead();
		}
	}
	
	public void cooldownController() {
		
		if(!jumpCooldown) {
			jumpTick++;
			if(jumpTick >= 30) {
				jumpCooldown = true;
				jumpTick = 0;
			}
		}

		
		if(!attackCooldown) {
			attackTick++;
			if(attackTick >= 60 && soul > 0) {
				attackCooldown = true;
				attackTick = 0;
			}
		}
		
	}
	
	public void animation() {
		if(start) {
			Game.player.currentAni = PlayerAni.dead;
			tick++;
			if(Stage == 3 && tick >= 29 && tick != 30) {
				Game.entities.add(new body(PlayerAni.dead[3], (int) (Game.player.getX()),  (int) (Game.player.getY()), 16, 16));
				Game.player.setX(World.spawnX);
				Game.player.setY(World.spawnY);
				PlayerState.setState(new Player_Idle());
				start = false;
			}
			if(tick >= 30) { 
				Stage++;
				Game.player.curAnimation++;
				tick = 0;
			}
		}
		else {
			frame++;
			if(frame >= maxFrame) {
				curAnimation++;
				frame = 0;
			}
			if(curAnimation >= 2) {
				curAnimation = 0;
			}
		}
	}
	
	public void update() {
		if(!(playerState instanceof Player_Climb) && !(playerState instanceof Player_Plant)) {
			animation();
		}
		playerController();
		cooldownController();
	}
	
	public void render(Graphics g) {
		g.drawImage(currentAni[curAnimation], x, y, null);
	}	
	
}
